let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
nnoremap <buffer> <silent>  :silent doautocmd eclim_tree User <buffer>
nnoremap <buffer> <silent>  :call eclim#tree#Execute(0)
nnoremap <buffer> <silent> ? :call eclim#help#BufferHelp(b:project_tree_help, 'horizontal', 10)
nnoremap <buffer> <silent> A :call eclim#tree#ToggleViewHidden()
nnoremap <buffer> <silent> B :call eclim#tree#SetRoot( fnamemodify(eclim#tree#GetRoot(), ':h:h'))
nnoremap <buffer> <silent> C :call eclim#tree#SetRoot(eclim#tree#GetPath())
nnoremap <buffer> <silent> D :call eclim#tree#Mkdir()
nnoremap <buffer> <silent> I :call eclim#util#Echo( eclim#tree#GetFileInfo(eclim#tree#GetPath()))
nnoremap <buffer> <silent> P :call eclim#tree#MoveToLastChild()
nnoremap <buffer> <silent> R :call eclim#tree#Refresh()
nnoremap <buffer> <silent> i :call eclim#util#Echo( eclim#tree#GetFileInfo(eclim#tree#GetPath()))
nnoremap <buffer> <silent> j :TreeNextPrevLine j
nnoremap <buffer> <silent> k :TreeNextPrevLine k
nnoremap <buffer> <silent> o :call eclim#tree#Execute(1)
nnoremap <buffer> <silent> p :call eclim#tree#MoveToParent()
nnoremap <buffer> <silent> s :call eclim#tree#Shell(0)
nnoremap <buffer> <silent> ~ :call eclim#tree#SetRoot(eclim#UserHome())
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=hide
setlocal nobuflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'tree'
setlocal filetype=tree
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=getline(v:foldstart)
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal nomodifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'tree'
setlocal syntax=tree
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=500
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal winfixwidth
setlocal nowrap
setlocal wrapmargin=0
let s:l = 10 - ((9 * winheight(0) + 29) / 59)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
10
normal! 014l
lcd ~/
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
